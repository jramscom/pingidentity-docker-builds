#!/usr/bin/env sh
echo "Post-build stage (like fixing permissions)"
set -x
osID="unknown"
test -f "/etc/os-release" && osID="$(awk -F = '$1~/^ID$/{gsub(/"/,"");print $2}' "/etc/os-release")"

if test "${osID}" = "rhel"; then
    echo "Removing integration kits prone to security scan vioations ..."
    rm -vf /opt/server/server/default/deploy/PingIDRadiusPCV-*.jar /opt/server/server/default/deploy/pf-pingid-idp-adapter-*.jar
fi

#- Create the license directory with valid permissions so a license can be mounted via k8s secret.
#- K8s secrets do not support setting file permissions, so allowing the secret to create these directories
#- results in them being owned by root. This can lead to issues during 06-copy-product-bits.sh.
mkdir -p /opt/out/instance/server/default/conf

# Copy the default run.properties into the /opt/staging directory to serve as a default when
# no server profile is provided. Variable values will be inserted to allow configuration to be
# pulled from environment variables when there is no server profile.
cp /opt/server/bin/run.properties "/opt/staging/instance/bin/run.properties.subst.default"

# shellcheck disable=SC2016
sed -i -e 's/^pf\.admin\.https\.port=.*$/pf.admin.https.port=${PF_ADMIN_PORT}/' \
    -e 's/^pf\.admin\.baseurl=.*$/pf.admin.baseurl=${PF_ADMIN_PUBLIC_BASEURL}/' \
    -e 's/^pf\.admin\.hostname=.*$/pf.admin.hostname=${PF_ADMIN_PUBLIC_HOSTNAME}/' \
    -e 's/^pf\.console\.title=.*$/pf.console.title=${PF_CONSOLE_TITLE}/' \
    -e 's/^pf\.console\.environment=.*$/pf.console.environment=${PF_CONSOLE_ENV}/' \
    -e 's/^pf\.pingone\.admin\.url\.region=.*$/pf.pingone.admin.url.region=${PF_PINGONE_REGION}/' \
    -e 's/^pf\.pingone\.admin\.url\.environment\.id=.*$/pf.pingone.admin.url.environment.id=${PF_PINGONE_ENV_ID}/' \
    -e 's/^pf\.console\.authentication=.*$/pf.console.authentication=${PF_CONSOLE_AUTHENTICATION}/' \
    -e 's/^pf\.admin\.api\.authentication=.*$/pf.admin.api.authentication=${PF_ADMIN_API_AUTHENTICATION}/' \
    -e 's/^pf\.https\.port=.*$/pf.https.port=${PF_ENGINE_PORT}/' \
    -e 's/^pf\.secondary\.https\.port=.*$/pf.secondary.https.port=${PF_ENGINE_SECONDARY_PORT}/' \    
    -e 's/^pf\.heartbeat\.system\.monitoring=false/pf.heartbeat.system.monitoring=true/' \
    -e 's/^pf\.operational\.mode=.*$/pf.operational.mode=${OPERATIONAL_MODE}/' \
    -e 's/^pf\.cluster\.tcp\.discovery\.initial\.hosts=.*$/pf.cluster.tcp.discovery.initial.hosts=${DISCOVERY_INITIAL_HOST}/' \
    -e 's/^node\.tags=.*$/node.tags=${PF_NODE_TAGS}/' \
    -e 's/^pf\.hsm\.mode=.*$/pf.hsm.mode=${HSM_MODE}/' \
    -e 's/^pf\.hsm\.hybrid=.*$/pf.hsm.hybrid=${PF_HSM_HYBRID}/' \
    -e 's/^pf\.provisioner\.mode=.*$/pf.provisioner.mode=${PF_PROVISIONER_MODE}/' \
    -e 's/^provisioner\.node\.id=.*$/provisioner.node.id=${PF_PROVISIONER_NODE_ID}/' \
    -e 's/^provisioner\.failover\.grace\.period=.*$/provisioner.failover.grace.period=${PF_PROVISIONER_GRACE_PERIOD}/' \
    -e 's/^pf\.runtime\.threads\.min=.*$/pf.runtime.threads.min=${PF_JETTY_THREADS_MIN}/' \
    -e 's/^pf\.runtime\.threads\.max=.*$/pf.runtime.threads.max=${PF_JETTY_THREADS_MAX}/' \
    -e 's/^pf\.runtime\.acceptQueueSize=.*$/pf.runtime.acceptQueueSize=${PF_ACCEPT_QUEUE_SIZE}/' \
    -e 's/^pf\.cluster\.bind\.address=.*$/pf.cluster.bind.address=${CLUSTER_BIND_ADDRESS}/' "/opt/staging/instance/bin/run.properties.subst.default"

# Append values not set in the default run.properties
echo "
pf.admin.hostname=\${PF_ADMIN_PUBLIC_HOSTNAME}
# com.unboundid.ldap.sdk.debug.type=LDAP
" >> "/opt/staging/instance/bin/run.properties.subst.default"

# shellcheck disable=SC2153
version="${VERSION}"
conf_dir="/opt/staging/instance/server/default/conf"

#TODO: remove this logic once we are no longer building PF 11.1
#Select the correct log4j2.xml file based on product version
if test "${version#*"11.1."}" != "${version}"; then
    mv "${conf_dir}/pre-11.2-log4j2.xml.subst.default" "${conf_dir}/log4j2.xml.subst.default"
else
    rm "${conf_dir}/pre-11.2-log4j2.xml.subst.default"
fi

# delete self
rm -f "${0}"
set +x
echo "Post-build stage done."
